/*
 * This file is generated by jOOQ.
*/
package zw.co.elearning.school.db.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import zw.co.elearning.school.db.Keys;
import zw.co.elearning.school.db.School;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class HTS extends TableImpl<Record> {

    private static final long serialVersionUID = -1716875403;

    /**
     * The reference instance of <code>school.hts</code>
     */
    public static final HTS HTS = new HTS();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>school.hts.id</code>.
     */
    public final TableField<Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>school.hts.created_by</code>.
     */
    public final TableField<Record, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>school.hts.created_date</code>.
     */
    public final TableField<Record, Timestamp> CREATED_DATE = createField("created_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>school.hts.last_modified_by</code>.
     */
    public final TableField<Record, String> LAST_MODIFIED_BY = createField("last_modified_by", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>school.hts.last_modified_date</code>.
     */
    public final TableField<Record, Timestamp> LAST_MODIFIED_DATE = createField("last_modified_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>school.hts.approach</code>.
     */
    public final TableField<Record, String> APPROACH = createField("approach", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>school.hts.couple_counselling</code>.
     */
    public final TableField<Record, Boolean> COUPLE_COUNSELLING = createField("couple_counselling", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>school.hts.post_test_counselling</code>.
     */
    public final TableField<Record, Boolean> POST_TEST_COUNSELLING = createField("post_test_counselling", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>school.hts.pre_test_information_given</code>.
     */
    public final TableField<Record, Boolean> PRE_TEST_INFORMATION_GIVEN = createField("pre_test_information_given", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>school.hts.results_issued</code>.
     */
    public final TableField<Record, Boolean> RESULTS_ISSUED = createField("results_issued", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>school.hts.retest</code>.
     */
    public final TableField<Record, Boolean> RETEST = createField("retest", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>school.hts.test_for_pregnancy</code>.
     */
    public final TableField<Record, Boolean> TEST_FOR_PREGNANCY = createField("test_for_pregnancy", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>school.hts.encounter_id</code>.
     */
    public final TableField<Record, Long> ENCOUNTER_ID = createField("encounter_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>school.hts.investigation_id</code>.
     */
    public final TableField<Record, Long> INVESTIGATION_ID = createField("investigation_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>school.hts.model_id</code>.
     */
    public final TableField<Record, Long> MODEL_ID = createField("model_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>school.hts.purpose_of_test_id</code>.
     */
    public final TableField<Record, Long> PURPOSE_OF_TEST_ID = createField("purpose_of_test_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>school.hts.reason_for_not_issuing_result_id</code>.
     */
    public final TableField<Record, Long> REASON_FOR_NOT_ISSUING_RESULT_ID = createField("reason_for_not_issuing_result_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>school.hts</code> table reference
     */
    public HTS() {
        this("hts", null);
    }

    /**
     * Create an aliased <code>school.hts</code> table reference
     */
    public HTS(String alias) {
        this(alias, HTS);
    }

    private HTS(String alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private HTS(String alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return School.SCHOOL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<Record, Long> getIdentity() {
        return Keys.IDENTITY_HTS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Record> getPrimaryKey() {
        return Keys.KEY_HTS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Record>> getKeys() {
        return Arrays.<UniqueKey<Record>>asList(Keys.KEY_HTS_PRIMARY, Keys.KEY_HTS_UK_MH2FTAJGHI21K184JXSVOHSVS, Keys.KEY_HTS_UK_JHFYK4RB0QVRM4KYK37XS37I9);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<Record, ?>> getReferences() {
        return Arrays.<ForeignKey<Record, ?>>asList(Keys.FK1WDBRRC8JTW8F5B2NTBLQIXI1, Keys.FK7LAHYEBR8RA9IFXVX5WTTIQN7, Keys.FKC7B4TLB9FX1MKDUMP3FVONFYF, Keys.FKJEJKYAL4FR96YMPB7YOO3O2M6, Keys.FK3CJ40HOLHUORFQSWPU7KG3EOE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public HTS as(String alias) {
        return new HTS(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public HTS rename(String name) {
        return new HTS(name, null);
    }
}
