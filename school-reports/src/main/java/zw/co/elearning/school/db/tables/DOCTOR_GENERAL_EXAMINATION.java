/*
 * This file is generated by jOOQ.
*/
package zw.co.elearning.school.db.tables;


import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import zw.co.elearning.school.db.Keys;
import zw.co.elearning.school.db.School;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DOCTOR_GENERAL_EXAMINATION extends TableImpl<Record> {

    private static final long serialVersionUID = 1984526258;

    /**
     * The reference instance of <code>school.doctor_general_examination</code>
     */
    public static final DOCTOR_GENERAL_EXAMINATION DOCTOR_GENERAL_EXAMINATION = new DOCTOR_GENERAL_EXAMINATION();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>school.doctor_general_examination.id</code>.
     */
    public final TableField<Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>school.doctor_general_examination.created_by</code>.
     */
    public final TableField<Record, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>school.doctor_general_examination.created_date</code>.
     */
    public final TableField<Record, Timestamp> CREATED_DATE = createField("created_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>school.doctor_general_examination.last_modified_by</code>.
     */
    public final TableField<Record, String> LAST_MODIFIED_BY = createField("last_modified_by", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>school.doctor_general_examination.last_modified_date</code>.
     */
    public final TableField<Record, Timestamp> LAST_MODIFIED_DATE = createField("last_modified_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>school.doctor_general_examination.abdomen</code>.
     */
    public final TableField<Record, String> ABDOMEN = createField("abdomen", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>school.doctor_general_examination.cvs</code>.
     */
    public final TableField<Record, String> CVS = createField("cvs", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>school.doctor_general_examination.engagement</code>.
     */
    public final TableField<Record, String> ENGAGEMENT = createField("engagement", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>school.doctor_general_examination.lie</code>.
     */
    public final TableField<Record, String> LIE = createField("lie", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>school.doctor_general_examination.presentation</code>.
     */
    public final TableField<Record, String> PRESENTATION = createField("presentation", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>school.doctor_general_examination.rs</code>.
     */
    public final TableField<Record, String> RS = createField("rs", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>school.doctor_general_examination.blood_pressure_id</code>.
     */
    public final TableField<Record, Long> BLOOD_PRESSURE_ID = createField("blood_pressure_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>school.doctor_general_examination.foetal_heart_rate_id</code>.
     */
    public final TableField<Record, Long> FOETAL_HEART_RATE_ID = createField("foetal_heart_rate_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>school.doctor_general_examination.haemoglobin_id</code>.
     */
    public final TableField<Record, Long> HAEMOGLOBIN_ID = createField("haemoglobin_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>school.doctor_general_examination</code> table reference
     */
    public DOCTOR_GENERAL_EXAMINATION() {
        this("doctor_general_examination", null);
    }

    /**
     * Create an aliased <code>school.doctor_general_examination</code> table reference
     */
    public DOCTOR_GENERAL_EXAMINATION(String alias) {
        this(alias, DOCTOR_GENERAL_EXAMINATION);
    }

    private DOCTOR_GENERAL_EXAMINATION(String alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private DOCTOR_GENERAL_EXAMINATION(String alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return School.SCHOOL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<Record, Long> getIdentity() {
        return Keys.IDENTITY_DOCTOR_GENERAL_EXAMINATION;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Record> getPrimaryKey() {
        return Keys.KEY_DOCTOR_GENERAL_EXAMINATION_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Record>> getKeys() {
        return Arrays.<UniqueKey<Record>>asList(Keys.KEY_DOCTOR_GENERAL_EXAMINATION_PRIMARY, Keys.KEY_DOCTOR_GENERAL_EXAMINATION_UK_4OA2W06OGCXTBD5PJPC1SNEEV, Keys.KEY_DOCTOR_GENERAL_EXAMINATION_UK_JFF38R644EWANJ858WN44RY60, Keys.KEY_DOCTOR_GENERAL_EXAMINATION_UK_7WNAPOBGW1FP4ASWDRXQTAB8A);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<Record, ?>> getReferences() {
        return Arrays.<ForeignKey<Record, ?>>asList(Keys.FKCFGN951A2BSX1LLI043FS116E, Keys.FKERLQRUSKAAV3V8OT2GVMQW82B, Keys.FKKK7UKP7RRBC1NCLC96WYB9CIT);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public DOCTOR_GENERAL_EXAMINATION as(String alias) {
        return new DOCTOR_GENERAL_EXAMINATION(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public DOCTOR_GENERAL_EXAMINATION rename(String name) {
        return new DOCTOR_GENERAL_EXAMINATION(name, null);
    }
}
