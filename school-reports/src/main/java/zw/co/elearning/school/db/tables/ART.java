/*
 * This file is generated by jOOQ.
*/
package zw.co.elearning.school.db.tables;


import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import zw.co.elearning.school.db.Keys;
import zw.co.elearning.school.db.School;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ART extends TableImpl<Record> {

    private static final long serialVersionUID = -2028879868;

    /**
     * The reference instance of <code>school.art</code>
     */
    public static final ART ART = new ART();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>school.art.id</code>.
     */
    public final TableField<Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>school.art.created_by</code>.
     */
    public final TableField<Record, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>school.art.created_date</code>.
     */
    public final TableField<Record, Timestamp> CREATED_DATE = createField("created_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>school.art.last_modified_by</code>.
     */
    public final TableField<Record, String> LAST_MODIFIED_BY = createField("last_modified_by", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>school.art.last_modified_date</code>.
     */
    public final TableField<Record, Timestamp> LAST_MODIFIED_DATE = createField("last_modified_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>school.art.art_number</code>.
     */
    public final TableField<Record, String> ART_NUMBER = createField("art_number", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>school.art.central_nervous_system</code>.
     */
    public final TableField<Record, String> CENTRAL_NERVOUS_SYSTEM = createField("central_nervous_system", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>school.art.cyanosis</code>.
     */
    public final TableField<Record, Boolean> CYANOSIS = createField("cyanosis", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>school.art.date</code>.
     */
    public final TableField<Record, Date> DATE = createField("date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>school.art.enlarged_lymph_node</code>.
     */
    public final TableField<Record, Boolean> ENLARGED_LYMPH_NODE = createField("enlarged_lymph_node", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>school.art.jaundice</code>.
     */
    public final TableField<Record, Boolean> JAUNDICE = createField("jaundice", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>school.art.mental_status</code>.
     */
    public final TableField<Record, String> MENTAL_STATUS = createField("mental_status", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>school.art.pallor</code>.
     */
    public final TableField<Record, Boolean> PALLOR = createField("pallor", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>school.art.bp_id</code>.
     */
    public final TableField<Record, Long> BP_ID = createField("bp_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>school.art.diagnosis_id</code>.
     */
    public final TableField<Record, Long> DIAGNOSIS_ID = createField("diagnosis_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>school.art.height_id</code>.
     */
    public final TableField<Record, Long> HEIGHT_ID = createField("height_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>school.art.investigation_id</code>.
     */
    public final TableField<Record, Long> INVESTIGATION_ID = createField("investigation_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>school.art.person_id</code>.
     */
    public final TableField<Record, Long> PERSON_ID = createField("person_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>school.art.pulse_id</code>.
     */
    public final TableField<Record, Long> PULSE_ID = createField("pulse_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>school.art.rr_id</code>.
     */
    public final TableField<Record, Long> RR_ID = createField("rr_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>school.art.temperature_id</code>.
     */
    public final TableField<Record, Long> TEMPERATURE_ID = createField("temperature_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * The column <code>school.art.weight_id</code>.
     */
    public final TableField<Record, Long> WEIGHT_ID = createField("weight_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>school.art</code> table reference
     */
    public ART() {
        this("art", null);
    }

    /**
     * Create an aliased <code>school.art</code> table reference
     */
    public ART(String alias) {
        this(alias, ART);
    }

    private ART(String alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private ART(String alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return School.SCHOOL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<Record, Long> getIdentity() {
        return Keys.IDENTITY_ART;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Record> getPrimaryKey() {
        return Keys.KEY_ART_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Record>> getKeys() {
        return Arrays.<UniqueKey<Record>>asList(Keys.KEY_ART_PRIMARY, Keys.KEY_ART_UK_24BUENCRYTSKH35RRG9RVM9IW, Keys.KEY_ART_UK_OB6N01VL8VVS4O1MCWBKI3QVR, Keys.KEY_ART_UK_GY8QXT49T5UBNQKQQTLEW8IPP, Keys.KEY_ART_UK_24FIG93QWDIX5V67S2DLY2M1H, Keys.KEY_ART_UK_BEDPGL1MQJX73LDT1P7E2G0UX, Keys.KEY_ART_UK_62E5RBCNTIRB5HJT9NJ5TFEJT, Keys.KEY_ART_UK_AD9IHV7HH1AE7LWSCN4OSOLBJ, Keys.KEY_ART_UK_98W3ONG9YOIYMURKJSMTGN884, Keys.KEY_ART_UK_1Y2H1B32VD26YOQ05D0WBI94V);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<Record, ?>> getReferences() {
        return Arrays.<ForeignKey<Record, ?>>asList(Keys.FKFJNACDJ522E2WRQB5WS54GLWB, Keys.FKELLE6IF7SO2FAL1X7FXBMYGLK, Keys.FKHGS8PR3YGQ7K65EAHF5BIBMAD, Keys.FK62SEHY8KUM3LVJOLFKRUUT9KF, Keys.FK410OK6YVH98IN4FUIQVS65T52, Keys.FK218QKT58YTN94117CSJX46HHL, Keys.FKR55WI32GNPRCB8VSEXBLDFFBK, Keys.FKKGQA4BGXUCGNRCLB8CLR1EV9V, Keys.FKN9H0OLY19HBO5BYMHP8QD2YV1);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ART as(String alias) {
        return new ART(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ART rename(String name) {
        return new ART(name, null);
    }
}
