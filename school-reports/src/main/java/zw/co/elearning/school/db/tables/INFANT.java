/*
 * This file is generated by jOOQ.
*/
package zw.co.elearning.school.db.tables;


import java.sql.Date;
import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;

import zw.co.elearning.school.db.Keys;
import zw.co.elearning.school.db.School;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class INFANT extends TableImpl<Record> {

    private static final long serialVersionUID = -303181715;

    /**
     * The reference instance of <code>school.infant</code>
     */
    public static final INFANT INFANT = new INFANT();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>school.infant.id</code>.
     */
    public final TableField<Record, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>school.infant.created_by</code>.
     */
    public final TableField<Record, String> CREATED_BY = createField("created_by", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false), this, "");

    /**
     * The column <code>school.infant.created_date</code>.
     */
    public final TableField<Record, Timestamp> CREATED_DATE = createField("created_date", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>school.infant.last_modified_by</code>.
     */
    public final TableField<Record, String> LAST_MODIFIED_BY = createField("last_modified_by", org.jooq.impl.SQLDataType.VARCHAR.length(50), this, "");

    /**
     * The column <code>school.infant.last_modified_date</code>.
     */
    public final TableField<Record, Timestamp> LAST_MODIFIED_DATE = createField("last_modified_date", org.jooq.impl.SQLDataType.TIMESTAMP, this, "");

    /**
     * The column <code>school.infant.abnormalities</code>.
     */
    public final TableField<Record, String> ABNORMALITIES = createField("abnormalities", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>school.infant.apgar_1</code>.
     */
    public final TableField<Record, Integer> APGAR_1 = createField("apgar_1", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>school.infant.apgar_5</code>.
     */
    public final TableField<Record, Integer> APGAR_5 = createField("apgar_5", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>school.infant.breastfed</code>.
     */
    public final TableField<Record, Boolean> BREASTFED = createField("breastfed", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>school.infant.breathing</code>.
     */
    public final TableField<Record, Boolean> BREATHING = createField("breathing", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>school.infant.condition_after_5</code>.
     */
    public final TableField<Record, String> CONDITION_AFTER_5 = createField("condition_after_5", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>school.infant.crying</code>.
     */
    public final TableField<Record, Boolean> CRYING = createField("crying", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>school.infant.date</code>.
     */
    public final TableField<Record, Date> DATE = createField("date", org.jooq.impl.SQLDataType.DATE.nullable(false), this, "");

    /**
     * The column <code>school.infant.delivery_method</code>.
     */
    public final TableField<Record, String> DELIVERY_METHOD = createField("delivery_method", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false), this, "");

    /**
     * The column <code>school.infant.head_circumference</code>.
     */
    public final TableField<Record, Integer> HEAD_CIRCUMFERENCE = createField("head_circumference", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>school.infant.height</code>.
     */
    public final TableField<Record, Integer> HEIGHT = createField("height", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>school.infant.meconium</code>.
     */
    public final TableField<Record, Boolean> MECONIUM = createField("meconium", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>school.infant.outcome</code>.
     */
    public final TableField<Record, String> OUTCOME = createField("outcome", org.jooq.impl.SQLDataType.VARCHAR.length(255), this, "");

    /**
     * The column <code>school.infant.resuscitation</code>.
     */
    public final TableField<Record, Boolean> RESUSCITATION = createField("resuscitation", org.jooq.impl.SQLDataType.BIT, this, "");

    /**
     * The column <code>school.infant.time</code>.
     */
    public final TableField<Record, Timestamp> TIME = createField("time", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false), this, "");

    /**
     * The column <code>school.infant.weight</code>.
     */
    public final TableField<Record, Integer> WEIGHT = createField("weight", org.jooq.impl.SQLDataType.INTEGER, this, "");

    /**
     * The column <code>school.infant.delivery_id</code>.
     */
    public final TableField<Record, Long> DELIVERY_ID = createField("delivery_id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>school.infant.person_id</code>.
     */
    public final TableField<Record, Long> PERSON_ID = createField("person_id", org.jooq.impl.SQLDataType.BIGINT, this, "");

    /**
     * Create a <code>school.infant</code> table reference
     */
    public INFANT() {
        this("infant", null);
    }

    /**
     * Create an aliased <code>school.infant</code> table reference
     */
    public INFANT(String alias) {
        this(alias, INFANT);
    }

    private INFANT(String alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private INFANT(String alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return School.SCHOOL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<Record, Long> getIdentity() {
        return Keys.IDENTITY_INFANT;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<Record> getPrimaryKey() {
        return Keys.KEY_INFANT_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<Record>> getKeys() {
        return Arrays.<UniqueKey<Record>>asList(Keys.KEY_INFANT_PRIMARY, Keys.KEY_INFANT_UK_AHHMSAE4F2EA4J7DJ91HLAQS6);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<Record, ?>> getReferences() {
        return Arrays.<ForeignKey<Record, ?>>asList(Keys.FKBAVY75M773SSTPMKOA9D5DHEP, Keys.FK795QT0JCAFMM1MCI3DCFEM5QL);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public INFANT as(String alias) {
        return new INFANT(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public INFANT rename(String name) {
        return new INFANT(name, null);
    }
}
